3.1. Insert the following documents into the projects collection.

 db.project.insertMany([{"title": "Inventory Management System","description": "It is an InventoryManagement System"}, 
 						{"title": "Employee Management System","description": "It is an Employee Management System"}, 
 						{"title": "Project Management System","description": "It is a Project Management System"}, 
 						{"title": "Medical Information System","description": "It is a Medical Information System"}, 
 						{"title": "Online Food Ordering System","description": "It is an Online Food Ordering System"}])


3.2. Insert the following documents into the trainees collection.

db.trainee.insertOne({"fullName": "Krushit Dudhat","designation": "Trainee Software Engineer","department": "NodeJS","technologiesKnown": ["NodeJS","Javascript","MongoDB"],"projects": [{"ID": 1,"title": "Inventory Management System"},{"ID": 2,"title": "Employee Management System"},{"ID": 5,"title": "Online Food Ordering System"}],"academicDetails": {"highestQualification": "B.E/B.Tech.","college": "VGEC, Chandkheda","university": "GTU","passoutYear": 2022},"contactDetails": {"primaryEmailID": "krushit.dudhat@bacancy.com","alternateEmailID": "krushitdudhat2001@gmail.com"},"isArchived": false})

db.trainee.insertOne({"fullName": "vinayak chavan","designation": "Trainee Software Engineer","department": "NodeJS","technologiesKnown": ["NodeJS","Javascript"],"projects": [{"ID": 1,"title": "Inventory Management System"},{"ID": 2,"title": "Employee Management System"}],"academicDetails": {"highestQualification": "B.E/B.Tech.","college": "VGEC, Chandkheda","university": "GTU","passoutYear": 2022},"contactDetails": {"primaryEmailID": "vinayak.chavan@bacancy.com", "alternateEmailID": ""},"isArchived": false})

db.trainee.insertOne({"fullName": "Apexa Patel","designation": "Trainee Software Engineer","department": "NodeJS","technologiesKnown": ["NodeJS","Javascript"],"projects": [{"ID": 1,"title": "Inventory Management System"},{"ID": 5,"title": "Online Food Ordering System"}],"academicDetails": {"highestQualification": "B.E/B.Tech.","college": "VGEC, Chandkheda","university": "GTU","passoutYear": 2022},"contactDetails": {"primaryEmailID": "apexa.patel@bacancy.com","alternateEmailID": "apexapatel27321@gmail.com"},"isArchived": false})

db.trainee.insertOne({"fullName": "Manish Rathod","designation": "Trainee Software Engineer","department": "NodeJS","technologiesKnown": ["NodeJS","MongoDB"],"projects": [{"ID": 2,"title": "Employee Management System"},{"ID": 3,"title": "Project Management System"} ],"academicDetails": {"highestQualification": "B.E/B.Tech.","college": "VGEC, Chandkheda","university": "GTU","passoutYear":2022}, "contactDetails":{"primaryEmailID":"manish.rathod@bacancy.com","alternateEmailID": "manishkrathod769@gmail.com"},"isArchived": false})

db.trainee.insertOne({"fullName": "Jinay Shah","designation": "Trainee Software Engineer","department": "NodeJS","technologiesKnown":["NodeJS","JavaScript","JAVA","MYSql"], "projects": [{"ID": 2,"title": "Employee Management System"},{ "ID":4,"title": "Medical Information System"}],"academicDetails": {"highestQualification": "MCA","college": "DDU, Nadiad","university":"DDU","passoutYear": 2022},"contactDetails": {"primaryEmailID": "jinay.shah@bacancy.com","alternateEmailID": ""},"isArchived": false})

db.trainee.insertOne({"fullName": "Jaykumar Bhatt","designation": "Trainee SoftwareEngineer","department":"NodeJS", "technologiesKnown": ["NodeJS","Javascript","MySql","C/C++","Java"],"projects": [{"ID": 1,"title": "Inventory Management System"},{"ID": 2,"title": "Employee Management System"},{"ID": 3,"title": "Project Management System"}],"academicDetails": {"highestQualification": "B.E/B.Tech.","college": "Marwadi University","university": "MU","passoutYear": 2022},"contactDetails": {"primaryEmailID": "jaykumar.bhatt@bacancy.com","alternateEmailID": "jaybhatt1025@gmail.com"},"isArchived": false})

 db.trainee.insertOne({"fullName": "Lav Panchal","designation": "Trainee Software Engineer","department": "NodeJS","technologiesKnown": ["NodeJS","Javascript"],"projects": [{"ID": 1,"title": "Inventory Management System"},{"ID": 2,"title": "Employee Management System"}, {"ID": 3,"title": "Project Management System"}],"academicDetails": {"highestQualification": "Msc. (CA&IT)","college": "K S School of Business Management","university": "GU","passoutYear": 2022},"contactDetails": {"primaryEmailID": "lav.panchal@bacancy.com","alternateEmailID": "lavgpanchal@gmail.com"},"isArchived": false})

 db.trainee.insertOne({"fullName": "Kirtan Gadhiya","designation": "Trainee Software Engineer","department": "NodeJS","technologiesKnown": ["NodeJS","Javascript"],"projects": [{"ID": 2,"title": "Employee Management System"},{"ID":4,"title": "Medical Information System"}],"academicDetails": {"highestQualification": "B.E/B.Tech.","college": "Birla Vishvakarma Mahavidyalaya","university": "GTU","passoutYear": 2022},"contactDetails": {"primaryEmailID": "kirtan.ghadiya@bacancy.com","alternateEmailID": ""},"isArchived": false})


3.3. Insert the following documents into the tasks collection.

db.task.insertMany([{"title": "P1 - Task 1","description": "P1 - Task 1","projectID": ObjectId("622992bede77829450a3fdec")},
					{"title": "P1 - Task 2","description": "P1 - Task 2","projectID": ObjectId("622992bede77829450a3fdec")},
					{"title": "P2 - Task 2","description": "P2 - Task 2","projectID": ObjectId("622992bede77829450a3fded")},
					{"title": "P2 - Task 2","description": "P2 - Task 2","projectID": ObjectId("622992bede77829450a3fded")},
					{"title": "P3 - Task 2","description": "P3 - Task 2","projectID": ObjectId("622992bede77829450a3fdee")},
					{"title": "P3 - Task 2","description": "P1 - Task 2","projectID": ObjectId("622992bede77829450a3fdee")},
					{"title": "P4 - Task 1","description": "P4 - Task 1","projectID": ObjectId("622992bede77829450a3fdef")},
					{"title": "P4 - Task 1","description": "P1 - Task 2","projectID": ObjectId("622992bede77829450a3fdef")},
					{"title": "P4 - Task 1","description": "P4 - Task 1","projectID": ObjectId("622992bede77829450a3fdf0")},
					{"title": "P4 - Task 1","description": "P1 - Task 2","projectID": ObjectId("622992bede77829450a3fdf0")}])




3.3.1. Fetch all the trainees with their project details, the result should only contain the fields: fullName, designation, department, technologiesKnown, projectDetails, primaryEmailID and also display the trainees in ascending order based on the fullName field.

db.trainee.find({},{_id:0 ,fullName:1,designation:1, department:1, technologiesKnown:1, projectDetails:1, primaryEmailID:1}). sort({"fullName":1})


3.3.2. Get the count of all the documents of tasks collection w/o using aggregation.

db.task.count()


3.3.3. Get the count of all the documents of tasks collection using aggregation.

db.task.aggregate([{$count:"title"}])


3.3.4. Fetch all the documents of the tasks collection grouped by the projectID field using aggregation.

db.task.aggregate([ { $group: { _id: "$projectID", project: { $push: "$title"}}} ]).pretty()

Output:
{
        "_id" : ObjectId("622992bede77829450a3fdee"),
        "project" : [
                "P3 - Task 2",
                "P3 - Task 2"
        ]
}
{
        "_id" : ObjectId("622992bede77829450a3fdf0"),
        "project" : [
                "P4 - Task 1",
                "P4 - Task 1"
        ]
}
{
        "_id" : ObjectId("622992bede77829450a3fdec"),
        "project" : [
                "P1 - Task 1",
                "P1 - Task 2"
        ]
}
{
        "_id" : ObjectId("622992bede77829450a3fdef"),
        "project" : [
                "P4 - Task 1",
                "P4 - Task 1"
        ]
}
{
        "_id" : ObjectId("622992bede77829450a3fded"),
        "project" : [
                "P2 - Task 2",
                "P2 - Task 2"
        ]
}